local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/Tactu-oss/Trials/refs/heads/main/RayFieldKey'))()

local Window = Rayfield:CreateWindow({
    Name = "Legacy Hub",
    Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
    LoadingTitle = "Legacy Hub",
    LoadingSubtitle = "by King",
    Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes
 
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface
 
    ConfigurationSaving = {
       Enabled = true,
       FolderName = nil, -- Create a custom folder for your hub/game
       FileName = "Legacy Hub"
    },
 
    Discord = {
       Enabled = true, -- Prompt the user to join your Discord server if their executor supports it
       Invite = "gDKjAr4R", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
       RememberJoins = false -- Set this to false to make them join the discord every time they load it up
    },
 
    KeySystem = false, -- Set this to true to use our key system
    KeySettings = {
       Title = "Legacy Hub",
       Subtitle = "Freemium Key System",
       Note = 'Get your key by clicking the<font color="#32CD32"> "Get a Script Key" '.."</font>button! or alternatively, you can visit our discord below!", -- Use this to tell the user how to get a key
       FileName = "LegacyKey", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
       SaveKey = false, -- The user's key will be saved, but if you change the key, they will be unable to use your script
       GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = {""} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
    }
 })

local realStatus = "Active"       -- Replace with your actual status variable
local realAction = "Processing"  -- Replace with your actual action variable
local realUnit = "Unit42"        -- Replace with your actual unit variable
local realWaitingFor = "Response" -- Replace with your actual waiting variable

local Tab = Window:CreateTab("Tab Example", 4483362458) -- Title, Image
local Section = Tab:CreateSection("Section Example")
local Paragraph = Tab:CreateParagraph({
	Title = "Macro Status: --Title", 
	Content = string.format([[
        Status: %s
        Action: %s
        Unit: %s
        Waiting For: %s
    ]], realStatus, realAction, realUnit, realWaitingFor)
})

Paragraph:Set({
	Title = "Macro Status: --Title", 
	Content = string.format([[
        Status: %s
        Action: %s
        Unit: %s
        Waiting For: %s
    ]], realStatus, realAction, realUnit, realWaitingFor)
})
